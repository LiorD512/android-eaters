Index: app/src/main/java/com/bupp/wood_spoon_eaters/features/splash/SplashActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bupp.wood_spoon_eaters.features.splash\r\n\r\nimport android.content.Intent\r\nimport android.net.Uri\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.lifecycle.Observer\r\nimport com.bupp.wood_spoon_eaters.R\r\nimport com.bupp.wood_spoon_eaters.common.Constants\r\nimport com.bupp.wood_spoon_eaters.databinding.ActivitySplashBinding\r\nimport com.bupp.wood_spoon_eaters.dialogs.WSErrorDialog\r\nimport com.bupp.wood_spoon_eaters.dialogs.update_required.UpdateRequiredDialog\r\nimport com.bupp.wood_spoon_eaters.features.login.LoginActivity\r\nimport com.bupp.wood_spoon_eaters.features.main.MainActivity\r\nimport com.bupp.wood_spoon_eaters.utils.updateScreenUi\r\nimport com.google.firebase.analytics.FirebaseAnalytics\r\nimport io.branch.referral.Branch\r\nimport org.koin.androidx.viewmodel.ext.android.viewModel\r\n\r\n\r\nclass SplashActivity : AppCompatActivity(), UpdateRequiredDialog.UpdateRequiredDialogListener, WSErrorDialog.WSErrorListener {\r\n\r\n    private lateinit var binding: ActivitySplashBinding\r\n    private var cookId: String? = null\r\n    private var menuItemId: String? = null\r\n    val viewModel: SplashViewModel by viewModel()\r\n\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        binding = ActivitySplashBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n//        android.os.Debug.waitForDebugger()\r\n//        setContentView(R.layout.activity_splash)\r\n\r\n        FirebaseAnalytics.getInstance(this)\r\n\r\n        init()\r\n        initObservers()\r\n    }\r\n\r\n    private fun init() {\r\n        viewModel.initAppSplashData(this)\r\n    }\r\n\r\n    private fun initObservers() {\r\n        viewModel.splashEvent.observe(this, Observer { splashEvent ->\r\n            val event = splashEvent.getContentIfNotHandled()\r\n            event?.let{\r\n                when(it){\r\n                    SplashViewModel.SplashEventType.SHOULD_UPDATE_VERSION -> {\r\n                        openVersionUpdateDialog()\r\n                    }\r\n                    SplashViewModel.SplashEventType.GO_TO_WELCOME -> {\r\n                        redirectToLogin(Constants.LOGIN_STATE_WELCOME)\r\n                    }\r\n                    SplashViewModel.SplashEventType.GO_TO_PHONE_VERIFICATION -> {\r\n                        redirectToLogin(Constants.LOGIN_STATE_VERIFICATION)\r\n                    }\r\n                    SplashViewModel.SplashEventType.GO_TO_CREATE_ACCOUNT -> {\r\n                        redirectToLogin(Constants.LOGIN_STATE_CREATE_ACCOUNT)\r\n                    }\r\n                    SplashViewModel.SplashEventType.GOT_TO_MAIN -> {\r\n                        redirectToMain()\r\n                    }\r\n                }\r\n            }\r\n            \r\n        })\r\n\r\n        viewModel.errorEvent.observe(this, Observer{\r\n            if(it){\r\n                WSErrorDialog(\"Server error, please try again later\", this).show(supportFragmentManager, Constants.WS_ERROR_DIALOG)\r\n            }\r\n        })\r\n    }\r\n\r\n    private fun redirectToLogin(loginScreenState: Int) {\r\n        startActivity(Intent(this, LoginActivity::class.java).putExtra(Constants.LOGIN_STATE, loginScreenState))\r\n        finish()\r\n    }\r\n\r\n    override fun onWSErrorDone() {\r\n        finishAffinity()\r\n    }\r\n\r\n    override fun onUpdateApp(redirectUrl: String) {\r\n        try {\r\n            startActivity(Intent(Intent.ACTION_VIEW, Uri.parse(redirectUrl)))\r\n        } catch (anfe: android.content.ActivityNotFoundException) {\r\n            startActivity(\r\n                Intent(\r\n                    Intent.ACTION_VIEW,\r\n                    Uri.parse(redirectUrl)\r\n                )\r\n            )\r\n        }\r\n    }\r\n\r\n    private fun openVersionUpdateDialog() {\r\n        UpdateRequiredDialog().show(supportFragmentManager, Constants.UPDATE_REQUIRED_DIALOG)\r\n    }\r\n\r\n    private fun redirectToMain() {\r\n        Log.d(TAG, \"redirectToMain\")\r\n        viewModel.initFCMAndRefreshToken()\r\n        val intent = Intent(this, MainActivity::class.java)\r\n        cookId?.let {\r\n            intent.putExtra(\"cook_id\", it.toLong())\r\n        }\r\n        menuItemId?.let {\r\n            intent.putExtra(\"menu_item_id\", it.toLong())\r\n        }\r\n        startActivity(intent)\r\n        overridePendingTransition(R.anim.fade_in, R.anim.fade_out)\r\n        finish()\r\n    }\r\n\r\n    public override fun onStart() {\r\n        super.onStart()\r\n        Branch.sessionBuilder(this).withCallback(callback).withData(if (intent != null) intent.data else null).init()\r\n    }\r\n\r\n    override fun onNewIntent(intent: Intent) {\r\n        super.onNewIntent(intent)\r\n        setIntent(intent)\r\n        Branch.sessionBuilder(this).withCallback(callback).reInit()\r\n    }\r\n\r\n    private val callback = Branch.BranchReferralInitListener { linkProperties, _ ->\r\n        linkProperties?.let {\r\n            Log.d(TAG, \"Branch.io intent $linkProperties\")\r\n            if (it.has(\"cook_id\")) {\r\n                cookId = it.get(\"cook_id\") as String\r\n            }\r\n            if (it.has(\"menu_item_id\")) {\r\n                menuItemId = it.get(\"menu_item_id\") as String\r\n            }\r\n            if(it.has(\"referral_token\")){\r\n                val token = it.get(\"referral_token\") as String\r\n                Log.d(TAG, \"referral_token: $token\")\r\n                viewModel.setUserReferralToken(token)\r\n            }\r\n        }\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n//        updateScreenUi()\r\n    }\r\n\r\n    companion object{\r\n        const val TAG = \"wowSplash\"\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/bupp/wood_spoon_eaters/features/splash/SplashActivity.kt	(revision ded4b065d8956cc23c02809099bcc04744ff23aa)
+++ app/src/main/java/com/bupp/wood_spoon_eaters/features/splash/SplashActivity.kt	(date 1630227357902)
@@ -32,7 +32,7 @@
 
         binding = ActivitySplashBinding.inflate(layoutInflater)
         setContentView(binding.root)
-//        android.os.Debug.waitForDebugger()
+
 //        setContentView(R.layout.activity_splash)
 
         FirebaseAnalytics.getInstance(this)
