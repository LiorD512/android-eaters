apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.innovattic.badge'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode System.getenv('VERSION_CODE') as Integer ?: 1000 // Temporary fallback versionCode to enable local builds
    }

    buildTypes {
        debug {
            debuggable true
            manifestPlaceholders["isTestMode"] = "true"
            getIsDefault().set(true)
        }

        release {
            debuggable false
            shrinkResources true
            minifyEnabled true
            manifestPlaceholders["isTestMode"] = "false"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "environment"
    productFlavors {
        staging {
            dimension = "environment"
            applicationIdSuffix = ".staging"
            buildConfigField "String", "BASE_URL", '"https://api.staging.eatwoodspoon.com/api/VERSION/"'
            getIsDefault().set(true)
        }

        production {
            dimension = "environment"
            buildConfigField "String", "BASE_URL", '"https://api.production.eatwoodspoon.com/api/VERSION/"'
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildFeatures {
        viewBinding true
    }

    lintOptions {
        disable "ComposableNaming"
    }
}

dependencies {
    implementation platform (project(':platform'))
    androidTestImplementation platform (project(':platform'))
    testImplementation platform (project(':platform'))
    kapt platform (project(':platform'))
}

badge {
    productFlavors {
        staging {
            enabled = true
            text = "STAGING"
            fontSize = 8
        }
    }
}